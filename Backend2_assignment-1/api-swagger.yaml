openapi: 3.0.1
info:
  title: Web-shop API
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Buy Order
    description: Here all the orders are found
  - name: Customer
    description: Here all the customers are found
  - name: Sign up
    description: Here you can sign up a new user
  - name: Items
    description: Here all the items are found
  - name: Get
    description: Here all the get methods are found
  - name: Post
    description: Here all the post methods are found
paths:
  /sign_up:
    post:
      tags:
        - Sign up
        - Post
      summary: Sign up
      description: This is to Sign up a new user
      operationId: saveUser
      requestBody:
        description: Here the customer need to write his/her username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            examples:
              Sign up:
                description: Sign up
                value:
                  name: string
                  address: string
                  username: string
                  password: string
        required: true
      responses:
        '201':
          description: A New user is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /login:
    post:
      tags:
        - Customer
        - Post
      summary: log in
      description: User to log in
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationRequest'
        '403':
          description: Authentication Issue
        '404':
          description: Username not found
  /items:
    get:
      tags:
        - Items
        - Get
      summary: All items
      description: View all the items
      operationId: getAllItems
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '403':
          description: Authentication Issue
    post:
      tags:
        - Items
        - Post
      summary: Add item
      description: Adding a new item
      operationId: addNewItem
      requestBody:
        description: Here the customer need to add a new item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
            examples:
              Adding an item:
                description: Adding an item
                value:
                  name: string
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '403':
          description: Authentication Issue
      security:
        - BearerJWT: []
  /items/buy:
    post:
      tags:
        - Items
        - Post
      summary: Buy a new item
      description: Buying a new item
      operationId: getOrdersByCustomerIdAndItemId
      requestBody:
        description: Here the customer need enter their id and item id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerItemResponseDTO'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '403':
          description: Authentication Issue
      security:
        - BearerJWT: []
  /customers:
    get:
      tags:
        - Customer
        - Get
      summary: All Customers
      description: View all the customers
      operationId: getAllCustomers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
        '403':
          description: Authentication Issue
      security:
        - BearerJWT: []
    post:
      tags:
        - Customer
        - Post
      summary: Add Customer
      description: Adding a new customer
      operationId: add
      requestBody:
        description: Here the customer need to write his/her username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            examples:
              Adding a customer:
                description: Adding a customer
                value:
                  name: string
                  address: string
                  username: string
                  password: string
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '403':
          description: Authentication Issue
      security:
        - BearerJWT: []
  /orders:
    get:
      tags:
        - Buy Order
        - Get
      summary: All orders
      description: View all the orders
      operationId: getOrders
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuyOrderResponse'
        '403':
          description: Authentication Issue
      security:
        - BearerJWT: []
  /orders/{customerId}:
    get:
      tags:
        - Buy Order
        - Get
      summary: Get specific order
      description: Get all orders by a given customerId
      operationId: getOrdersByCustomerId
      parameters:
        - name: customerId
          in: path
          description: The path variable.
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuyOrderResponse'
        '403':
          description: Authentication Issue
        '404':
          description: Order not found
      security:
        - BearerJWT: []
  /items/{name}:
    get:
      tags:
        - Items
        - Get
      summary: Get specific item
      description: Get an item by a given name
      operationId: getItemByName
      parameters:
        - name: name
          in: path
          description: The path variable.
          required: true
          schema:
            type: string
          example: Macbook Pro
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '403':
          description: Authentication Issue
        '404':
          description: Item not found
      security:
        - BearerJWT: []
  /customers/{id}:
    get:
      tags:
        - Customer
        - Get
      summary: Get specific customer
      description: Get a customer by a given id
      operationId: getCustomerResponseFromCustomerById
      parameters:
        - name: id
          in: path
          description: The path variable.
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '403':
          description: Authentication Issue
        '404':
          description: Customer not found
      security:
        - BearerJWT: []
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        username:
          type: string
        password:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    CustomerItemResponseDTO:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
    BuyOrderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerResponse:
          $ref: '#/components/schemas/CustomerResponse'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    CustomerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        username:
          type: string
  securitySchemes:
    BearerJWT:
      type: http
      description: Bearer token for the project.
      scheme: bearer
      bearerFormat: JWT
